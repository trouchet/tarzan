name: Pylint

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Poetry
      run: |
        # Install Poetry if not already installed
        curl -sSL https://install.python-poetry.org | python -
      shell: bash

    - name: Activate Poetry Environment and Install Dependencies
      run: |
        # Configure Poetry to use the correct Python version
        poetry config virtualenvs.create true
        # Activate the Poetry environment
        poetry env use ${{ matrix.python-version }}
        # Install project dependencies
        poetry install
      shell: bash

    - name: Analyze the code with pylint
      run: |
        # Run Pylint on Python files
        poetry run pylint --fail-under=95 $(git ls-files '*.py')
        # Allow the workflow to continue even if pylint fails to meet the threshold
        continue-on-error: true 
      
